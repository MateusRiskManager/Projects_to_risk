"""
Created on Fri Oct 29 11:18:19 2021

@author: mafeitosa

"""
import pandas as pd
#import matplotlib.pyplot as plt
from pandas.plotting import register_matplotlib_converters
register_matplotlib_converters()
from datetime import datetime
import win32com.client as win32

print('Nomes colunas')

col_names = ['CODCOLIGADA','NOMEFANTASIAEMP','NOMEFANTASIAINF','CODAGENCIA',
             'NOME_AGENCIA','CODCLIENTE','NOME_CLIENTE','CODCARTEIRA','NOME_CARTEIRA',
             'SIGMODALIDADE','DATAPOSICAO','VLRCURVA_UTEIS','VLRCURVA','VLRIDA','VLRVOLTA',
             'INDVINCULACAO','VLRIRF','VLRIOF_2','VLRIRF_UTEIS','VLRIOF2_UTEIS',
             'PRAZO_DECORRIDO_DU','PRAZO_DECORRIDO_DC','NUMESTOQUE','NUMESTOQUEFILHO',
             'DATAEMISSAO','DATAVENCIMENTO','NOMEFANTASIACLI','PERTAXA',
             'PRZDIASEMISSAO','TAXAJUROS','TIPODEVCPMF','VLRDEVCPMF','DESC_TIPOBLOQUEIO',
             'PERC_IND','DESTINACAO_TVM','DESCRICAO_TVM','SIGCUSTOD','NUMESTSWA',
             'INDCURVAGERENCIAL','PERCENTUAL_INDICE',
             'VLRIOF','TIPO_BLOQUEIO','NUMOPERACAOORI_CN','PRAZO_TOTAL_DU','PRAZO_TOTAL_DC',
             'CODREMUNERACAO','CODIGO_SNA','QTDLIVRE','TIPO','DATAAQUISICAO','SIGEMISSOR',
             'VLR_AJUSTE_MERCADO','CODTITCUSTOD','DATAVENCTOOPE','TIPOTRIBUTACAO',
             'NUMOPERACAOORI','CODCLIENTE_CONCAT',
             'NOMECLIENTE_EOU','TIPOLIQFINVOLTA','CODAGENCIALIQFINVOLTA','NUMCONTALIQFINVOLTA',
             'TIPORENDIMENTO','VLRDEVCPMF311204','VLR_PREVISAO_IRF','VLRIOF_VENC',
             'VLRCURVA_APRES','VLRIRF_APRES','VLRIOF_APRES','IND_SWAP','CODIGOISIN',
             'CONDICAORESGATE','DATALIQUIDEZ','CODGERENTE','CODGERENTE_ATUAL',
             'NOME_GERENTE','CODGERENTE_ORIGINAL','NOME_GERENTE2','IND_TRIBUTACPMF',
             'COD_OPER_ABC','TIPOEMISSOR','VLR_TIT_VENC','VLR_PDT','VLRINIVALORIZ',
             'DATAINIVALORIZ','IND_FILTRO_GERENTE','ENDERECO_SERVIDOR_WEBSERVICE',
             'IND_DOCX_EM_PDF']

now = datetime.now()
date_time = now.strftime("%d-%m-%Y")

print('Importando csv')

df = pd.read_csv("C:\\xxxx\Posicao-"+date_time+".csv", index_col = False, sep="[,;]", header= None, engine='python', names=col_names, skiprows=[0,1])

print('Correção textos')

df['VLRCURVA'] = df['VLRCURVA'].apply(lambda x: x.replace('.', ','))

df["PERCENTUAL_INDICE"] = df["PERCENTUAL_INDICE"].astype(str)
df['PERCENTUAL_INDICE'] = df['PERCENTUAL_INDICE'].apply(lambda x: x.replace("", ''))
df['PERCENTUAL_INDICE'] = df['PERCENTUAL_INDICE'].apply(lambda x: x.replace('.', ','))

df["QTDLIVRE"] = df["QTDLIVRE"].astype(str)
df['QTDLIVRE'] = df['QTDLIVRE'].apply(lambda x: x.replace("", ''))
df['QTDLIVRE'] = df['QTDLIVRE'].apply(lambda x: x.replace('.', ','))

print('Deletar Colunas')

#deletar colunas
del df['VLRCURVA_UTEIS']
del df['CODCOLIGADA']
del df['NOMEFANTASIAINF']
del df['CODAGENCIA']
del df['NOME_AGENCIA']
del df['CODCARTEIRA']
del df['NUMESTOQUEFILHO']
del df['PERTAXA']
del df['TAXAJUROS']
del df['TIPODEVCPMF']
del df['VLRDEVCPMF']
del df['PERC_IND']
del df['DESTINACAO_TVM']
del df['DESCRICAO_TVM']
del df['SIGCUSTOD']
del df['NUMESTSWA']
del df['INDCURVAGERENCIAL']
del df['VLRIOF']
del df['TIPO_BLOQUEIO']
del df['NUMOPERACAOORI_CN']
del df['CODREMUNERACAO']
del df['CODIGO_SNA']
del df['TIPO']
del df['DATAAQUISICAO']
del df['SIGEMISSOR']
del df['VLR_AJUSTE_MERCADO']
del df['CODTITCUSTOD']
del df['TIPOTRIBUTACAO']
del df['NUMOPERACAOORI']
del df['NOMECLIENTE_EOU']
del df['TIPOLIQFINVOLTA']
del df['CODAGENCIALIQFINVOLTA']
del df['NUMCONTALIQFINVOLTA']
del df['TIPORENDIMENTO']
del df['VLRDEVCPMF311204']
del df['VLR_PREVISAO_IRF']
del df['VLRIOF_VENC']
del df['IND_SWAP']
del df['CODIGOISIN']
del df['CONDICAORESGATE']
del df['CODGERENTE']
del df['CODGERENTE_ATUAL']
del df['NOME_GERENTE']
del df['CODGERENTE_ORIGINAL']
del df['NOME_GERENTE2']
del df['IND_TRIBUTACPMF']
del df['COD_OPER_ABC']
del df['TIPOEMISSOR']
del df['VLR_TIT_VENC']
del df['VLR_PDT']
del df['DATAINIVALORIZ']
del df['IND_FILTRO_GERENTE']
del df['ENDERECO_SERVIDOR_WEBSERVICE']
del df['IND_DOCX_EM_PDF']

print('Salvar arquivos')

df.reset_index(drop=True, inplace=True)

print('Criar arquivo Mitra')

selected_columns = df[["SIGMODALIDADE","DATAPOSICAO","DATAEMISSAO",
                       "DATAVENCIMENTO","DATALIQUIDEZ","NOME_CLIENTE","CODCLIENTE",
                       "PERCENTUAL_INDICE","VLRCURVA","DESC_TIPOBLOQUEIO",
                       "NOMEFANTASIAEMP","NOME_CARTEIRA","QTDLIVRE"]]

df_mitra = selected_columns.copy()

df_mitra = df_mitra.rename(columns={'SIGMODALIDADE': 'CODIGO', 'DATAPOSICAO': 'DATA_POSICAO',
                              'NUMESTOQUE':'CONTRATO','DATAEMISSAO':'INICIO',
                              'DATAVENCIMENTO':'VENCIMENTO','DATALIQUIDEZ':'LIQUIDEZ_DIARIA',
                              'NOME_CLIENTE':'CONTRAPARTE','PERCENTUAL_INDICE':'%INDEXADOR',
                              'QTDLIVRE':'QUANTIDADE', 'VLRCURVA':'VALOR_CONTABIL',
                              'DESC_TIPOBLOQUEIO':'INFORMATIVO_1', 'NOME_CARTEIRA':'DESCRICAO',
                              'NOMEFANTASIAEMP':'EMISSOR'})

print('Tratar Colunas')

df_mitra['CONTA_CONTABIL'] = df_mitra['CODIGO'].str[:3]
df_mitra['DATA_POSICAO'] = df_mitra['DATA_POSICAO'].str[:10]
#print(df_mitra['DATA_POSICAO'])
df_mitra['DATA_POSICAO_dia'] = df_mitra['DATA_POSICAO'].str[-2:]
df_mitra['DATA_POSICAO_mes'] = df_mitra['DATA_POSICAO'].str[5:-3]
df_mitra['DATA_POSICAO_ano'] = df_mitra['DATA_POSICAO'].str[:4]
df_mitra['DATA_POSICAO'] =df_mitra['DATA_POSICAO_dia'] +"/"+df_mitra['DATA_POSICAO_mes']+"/"+df_mitra['DATA_POSICAO_ano']

del df_mitra['DATA_POSICAO_dia']
del df_mitra['DATA_POSICAO_mes']
del df_mitra['DATA_POSICAO_ano']

df_mitra['INICIO'] = df_mitra['INICIO'].str[:10]
df_mitra['INICIO_dia'] = df_mitra['INICIO'].str[-2:]
df_mitra['INICIO_mes'] = df_mitra['INICIO'].str[5:-3]
df_mitra['INICIO_ano'] = df_mitra['INICIO'].str[:-6]
df_mitra['INICIO'] =df_mitra['INICIO_dia'] +"/"+df_mitra['INICIO_mes']+"/"+df_mitra['INICIO_ano']

del df_mitra['INICIO_dia']
del df_mitra['INICIO_mes']
del df_mitra['INICIO_ano']

df_mitra['VENCIMENTO'] = df_mitra['VENCIMENTO'].str[:10]
df_mitra['VENCIMENTO_dia'] = df_mitra['VENCIMENTO'].str[-2:]
df_mitra['VENCIMENTO_mes'] = df_mitra['VENCIMENTO'].str[5:-3]
df_mitra['VENCIMENTO_ano'] = df_mitra['VENCIMENTO'].str[:-6]

df_mitra['VENCIMENTO'] =df_mitra['VENCIMENTO_dia'] +"/"+df_mitra['VENCIMENTO_mes']+"/"+df_mitra['VENCIMENTO_ano']

del df_mitra['VENCIMENTO_dia']
del df_mitra['VENCIMENTO_mes']
del df_mitra['VENCIMENTO_ano']

df_mitra['LIQUIDEZ_DIARIA'] = df_mitra['LIQUIDEZ_DIARIA'].str[:10]
df_mitra['LIQUIDEZ_DIARIA_dia'] = df_mitra['LIQUIDEZ_DIARIA'].str[-2:]
df_mitra['LIQUIDEZ_DIARIA_mes'] = df_mitra['LIQUIDEZ_DIARIA'].str[5:-3]
df_mitra['LIQUIDEZ_DIARIA_ano'] = df_mitra['LIQUIDEZ_DIARIA'].str[:-6]
df_mitra['LIQUIDEZ_DIARIA'] =df_mitra['LIQUIDEZ_DIARIA_dia'] +"/"+df_mitra['LIQUIDEZ_DIARIA_mes']+"/"+df_mitra['LIQUIDEZ_DIARIA_ano']

del df_mitra['LIQUIDEZ_DIARIA_dia']
del df_mitra['LIQUIDEZ_DIARIA_mes']
del df_mitra['LIQUIDEZ_DIARIA_ano']

df_mitra['TAXA%'] = 0
df_mitra['INDEXADOR'] = "CDI"
df_mitra['PU_EMISSAO'] = 1000
df_mitra['CARTEIRA_NEGOCIACAO'] = 'Banking'
df_mitra['LOCAL_REGISTRO'] = '2'
df_mitra['TIPO_MARCACAO'] = 'C'
df_mitra['ESTRATEGIA_1'] = " "
df_mitra['ESTRATEGIA_2'] = " "
df_mitra['ESTRATEGIA_3'] = " "
df_mitra['INFORMATIVO_2'] = " "
df_mitra['DEVEDOR'] = " "
df_mitra['LASTRO'] = " "
df_mitra['DEVEDOR'] = " "
df_mitra['LOC_LIMITE'] = " "
df_mitra['MOD_OPERACAO'] = " "
df_mitra['SISTEMA_REGISTRO'] = " "
df_mitra['VALOR_COMPENSACAO'] = " "
df_mitra['SISTEMA_REGISTRO'] = " "
df_mitra['TIPO_EXPOSICAO'] = " "
df_mitra['VALOR_MITIGADOR'] = " "
df_mitra['CONTRATO'] = df['NUMESTOQUE']
df_mitra['CPF_CNPJ'] = df['CODCLIENTE']

#df_mitra['QUANTIDADE'].dtype
#df_mitra['QUANTIDADE'] = pd.to_numeric(df_mitra['QUANTIDADE'])

df_mitra['QUANTIDADE'] = df_mitra['QUANTIDADE'].astype('str') 
df_mitra['QUANTIDADE'] = "-" + df_mitra['QUANTIDADE']

df_mitra['CONTA_CONTABIL'] = df_mitra['CONTA_CONTABIL'].apply(lambda x: '41510102' if x == 'CDB' else '41510236')
df_mitra['FINALIDADE_CONTABIL'] = df_mitra['CONTA_CONTABIL'].apply(lambda x: 'Deposito a prazo com certificado' if x == '41510102' else 'Deposito a prazo com garantia especial')
df_mitra['NOME_PRODUTO'] = df_mitra['CONTA_CONTABIL'].apply(lambda x: 'CDB' if x == '41510102' else 'DPGE')

df_mitra = df_mitra[['CODIGO', 'DATA_POSICAO','CONTRATO','CONTA_CONTABIL','FINALIDADE_CONTABIL',
                     'NOME_PRODUTO','DESCRICAO','INICIO','VENCIMENTO','LIQUIDEZ_DIARIA',
                     'CONTRAPARTE','CPF_CNPJ','TAXA%','INDEXADOR','%INDEXADOR','QUANTIDADE',
                     'PU_EMISSAO','VALOR_CONTABIL','CARTEIRA_NEGOCIACAO','LOCAL_REGISTRO',
                     'TIPO_MARCACAO','ESTRATEGIA_1','ESTRATEGIA_2','ESTRATEGIA_3',
                     'INFORMATIVO_1','INFORMATIVO_2','EMISSOR','DEVEDOR','LASTRO','LOC_LIMITE',
                     'MOD_OPERACAO','SISTEMA_REGISTRO','VALOR_COMPENSACAO','TIPO_EXPOSICAO',
                     'VALOR_MITIGADOR']]

df_mitra['CODIGO'] = df_mitra['CONTRATO']

print('Salvar CSV')
df_mitra.to_csv("C:\\xxx\RF_Mitra"+date_time+".csv", index=False,sep=';')

